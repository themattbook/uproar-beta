@use "sass:math";

$grid-columns: 12;
$grid-gaps: (
	"0": 0,
	"1": 10px,
	"2": 20px,
	"3": 30px,
);
$layout-values: flex-start, flex-end, center, space-between, space-around,
	space-evenly;

// Base layout classes
.container {
	width: 100%;
	max-width: 1200px;
	margin: 0 auto;
	box-sizing: border-box;
	// padding: $base-padding;
}
.row {
	display: flex;
	flex-flow: row wrap;
	width: 100%;
}
.row-col {
	display: flex;
	flex-flow: column wrap;
	width: 100%;
	> * {
		flex-grow: 1;
	}
}

// Height
.height-screen {
	height: 100vh;
}
.height-full {
	height: 100%;
}
.max-height-screen {
	max-height: 100vh;
}

// Grip gaps
@each $key, $value in $grid-gaps {
	.gap-#{$key} > * {
		padding: $value;
	}
	.gap-#{$key} {
		margin-left: -$value;
		margin-right: -$value;
	}
}

// Justify content classes
@each $value in $layout-values {
	.justify-#{$value} {
		justify-content: $value;
	}
}

// Align content classes
@each $value in $layout-values {
	.align-content-#{$value} {
		align-content: $value;
	}
}
// Align content classes
@each $value in $layout-values {
	.align-items-#{$value} {
		align-items: $value;
	}
}

// Column classes
@include xs {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-xs {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
@include sm {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-sm {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
@include md {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-md {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
@include lg {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-lg {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
@include xl {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-xl {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
@include xxl {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-xxl {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
